*   In BST, left subtree will have all the nodes value less than root node and for right 
    subtree will have all the nodes value greater than root node.

*   Keeping this property in mind, while traversing left and right subtree, we will keep track of
    possible values for a particular subtree (using min and max parameter)

*   For left subtree max value will change to current root value minus 1 and for right subtree
    min value will change to current root value plus 1.

*   Initially, min will be 0 and max will be maximum int value.

*   Once we will reach leaf node, check whether max-min is greater than 0 or not. We are doing this 
    because max-min+1 will be max number of nodes that subtree can have, so max-min will be 
    maximum number of left and right child that root node can have combined.  

*   If above value is 0 then that root is dead end so return true else return false.
