*   Let say we have an array [1, 2, 3, 4, 5, 6]. If we want to reverse it we can use two pointer
    one will point to start and another will point to end. Move both the pointer in opposite 
    direction and while moving swap their values

    1st iteration [6, 2, 3, 4, 5, 1]
                   ^              ^
    2nd iteration [6, 5, 3, 4, 2, 1]
                      ^        ^
    3rd iteration [6, 5, 4, 3, 2, 1]
                         ^  ^

*   Keeping this approach in mind, for a given tree, consider its root left and right 
    as a seperate subtree.

*   Traverse both the subtree parallelly. While traversing, if moving left for first subtree
    then move right of second subtree and vice versa. This way both the node pointer will be pointing
    to its mirror node

*   Swap the node value with it's mirror node for odd level nodes , which will eventually reverse the node at odd levels

*   This approach is similar to reversing an array by swaping values of index with it's mirrored one